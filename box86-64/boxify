#!/bin/bash

function abort
{
    REASON=$1

    if ! [ "$REASON" == "" ];
    then
        echo "$REASON"
    fi

    echo ""

    exit 1
}


function boxify_exec
{
    EXEC=$1
    LAUNCHER=$2
    EXEC_FILENAME=$(basename $EXEC)
    
    if [ "$SCRIPT_PATH" == "" ];
    then
        SCRIPT_PATH="/usr/local/bin/${EXEC_FILENAME}"
    fi

    if [ -f "$SCRIPT_PATH" ];
    then
        echo "ERROR: Failed boxifing '${EXEC}'."
        echo "       An script named '${SCRIPT_PATH}' already exists."
        echo ""
        exit 1
    fi

    echo "#!/bin/bash" > "$SCRIPT_PATH"
    echo "" >> "$SCRIPT_PATH"
    echo "${LAUNCHER} $EXEC \$*" >> "$SCRIPT_PATH"
    echo "" >> "$SCRIPT_PATH"

    chmod +x "$SCRIPT_PATH"

    echo "'${EXEC}' boxified with '${LAUNCHER}' in '${SCRIPT_PATH}'."
    echo ""
}


function usage
{
    echo "Usage: boxify <executable file> [script path]"
    echo ""
    echo "Creates an script in /usr/local/bin that executes the file"
    echo "with Box86 or Box64, depending of the architecture of the"
    echo "executable."
    echo ""
    echo "If an script path is given, it will be used instead"
    echo "/usr/local/bin/{executable file}."
    echo ""
}


if [ "$1" == "" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ];
then
    usage
    exit 1
fi




EXEC=$1
export SCRIPT_PATH=$2
FILE_TYPE=$(file -L "$EXEC")

echo ${FILE_TYPE} | grep "ELF 32-bit" > /dev/null
LINUX_X86=$?

echo ${FILE_TYPE} | grep "ELF 64-bit" > /dev/null
LINUX_X64=$?


if [ "$LINUX_X86" == "0" ];
then
    boxify_exec "$EXEC" box86

    if ! [ "/usr/local/bin/box86" ];
    then
        echo "WARNING: Box86 has not been detected."
        echo "You need it for executing this script."
    fi

elif [ "$LINUX_X64" == "0" ];
then
    boxify_exec "$EXEC" box64
    
    if ! [ "/usr/local/bin/box64" ];
    then
        echo "WARNING: Box64 has not been detected."
        echo "You need it for executing this script."
    fi

else
    echo "The file '${EXEC}' isn't an Linux x86 or x86_64 executable."
    echo ""

    exit 1
fi

